@model CodeGenCLI.ProjectGeneration.BuildSystems.TemplateModel
# generated by CodeGen 0.0.1

ninja_required_version = 1.5

@{
    string CppToObjName(string cppName) => $"{cppName}.o";

    string project = Model.Configuration.ProjectName;
    string cxxRuleVar = $"cxx_rule_{project}";
    string cxxVar = $"cxx_{project}";
    string cxxArgsVar = $"cxx_args_{project}";

    string linkRuleVar = $"link_rule_{project}";
    string linkArgsVar = $"link_args_{project}";
    string linkLibsVar = $"link_libs_{project}";

    string srcRootVar = $"src_root_{project}";
    string tmpRootVar = $"tmp_root_{project}";
    string outRootVar = $"out_root_{project}";
}

@cxxVar = clang++
@cxxArgsVar = @Model.CompilerArgs
@linkArgsVar =
@linkLibsVar =

@srcRootVar = @Model.Configuration.SourceRoot
@tmpRootVar = @Model.Configuration.TempPath
@outRootVar = @Model.Configuration.ArtifactPath

# set directory for Ninja logs and deps files
builddir = $@tmpRootVar

rule @cxxRuleVar
    command = $@cxxVar $@cxxArgsVar -MMD -MF $out.d -c $in -o $out
    deps = gcc
    depfile = $out.d

rule @linkRuleVar
    command = $@cxxVar $@linkArgsVar $in $@linkLibsVar -o $out

@foreach (string file in Model.SourceFiles) {
@:build $@tmpRootVar/@CppToObjName(file): @cxxRuleVar $@srcRootVar/@file
}

@{
    string linkObjects = string.Join(
        ' ',
        Model.SourceFiles.Select(file => $"${tmpRootVar}/{CppToObjName(file)}"));
}

build $@outRootVar/@Model.Configuration.ArtifactName: @linkRuleVar @linkObjects
